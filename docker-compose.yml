services:
  # Database Services
  user-mongo:
    image: mongo:latest
    ports:
      - "${USER_MONGO_PORT:-27017}:27017"
    volumes:
      - user-mongo-data:/data/db
    command: mongod --auth --wiredTigerCacheSizeGB=0.25
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${USER_MONGO_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${USER_MONGO_PASSWORD:-secure_password}
      - MONGO_INITDB_DATABASE=${USER_MONGO_DB:-sober-user}
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.4'
    networks:
      - sober-network
    restart: unless-stopped
    profiles: ["full", "db"]

  notification-mongo:
    image: mongo:latest
    ports:
      - "${NOTIFICATION_MONGO_PORT:-27018}:27017"
    volumes:
      - notification-mongo-data:/data/db
    command: mongod --auth --wiredTigerCacheSizeGB=0.25
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${NOTIFICATION_MONGO_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${NOTIFICATION_MONGO_PASSWORD:-secure_password}
      - MONGO_INITDB_DATABASE=${NOTIFICATION_MONGO_DB:-sober-notification}
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.4'
    networks:
      - sober-network
    restart: unless-stopped
    profiles: ["full", "db"]

  trip-mongo:
    image: mongo:latest
    ports:
      - "${TRIP_MONGO_PORT:-27019}:27017"
    volumes:
      - trip-mongo-data:/data/db
    command: mongod --auth --wiredTigerCacheSizeGB=0.25
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${TRIP_MONGO_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${TRIP_MONGO_PASSWORD:-secure_password}
      - MONGO_INITDB_DATABASE=${TRIP_MONGO_DB:-sober-trip}
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.4'
    networks:
      - sober-network
    restart: unless-stopped
    profiles: ["full", "db"]

  redis:
    image: redis:latest
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD:-secure_redis_password} --maxmemory 256mb --maxmemory-policy allkeys-lru
    deploy:
      resources:
        limits:
          memory: 300M
          cpus: '0.3'
    networks:
      - sober-network
    restart: unless-stopped
    profiles: ["full", "db"]

  sober-user-api:
    build:
      context: ./sober-user-api
      dockerfile: Dockerfile
    container_name: sober-user-api
    ports:
      - "${USER_API_PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3000
      - MONGODB_URI=${USER_MONGODB_URI:-mongodb://${USER_MONGO_USERNAME:-admin}:${USER_MONGO_PASSWORD:-secure_password}@user-mongo:27017/${USER_MONGO_DB:-sober-user}?authSource=admin}
      - MONGODB_USER=${USER_MONGO_USERNAME:-admin}
      - MONGODB_PASSWORD=${USER_MONGO_PASSWORD:-secure_password}
      - JWT_SECRET=${JWT_SECRET:-your_super_secret_key_here}
      - NOTIFICATION_API_URL=${NOTIFICATION_API_URL:-http://notification-api:3001}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-eu-central-1}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME:-sober-user-uploads}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:8080}
      - NODE_OPTIONS=--max-old-space-size=256
    depends_on:
      - user-mongo
    networks:
      - sober-network
    deploy:
      resources:
        limits:
          memory: 300M
          cpus: '0.3'
    restart: unless-stopped
    profiles: ["full", "user-api"]

networks:
  sober-network:
    driver: bridge
    name: sober-network

volumes:
  user-mongo-data:
  notification-mongo-data:
  trip-mongo-data:
  redis-data: